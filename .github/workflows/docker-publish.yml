# Quelle: https://docs.github.com/en/actions/use-cases-and-examples/publishing-packages/publishing-docker-images#introduction
name: Create and publish a Docker image

# Configures this workflow to run every time a change is pushed to the branch called `release`.
on:
  push:
  pull_request:

# Defines two custom environment variables for the workflow. These are used for the Container registry domain, and a name for the Docker image that this workflow builds.
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

# There is a single job in this workflow. It's configured to run on the latest available version of Ubuntu.
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: myuser
          POSTGRES_PASSWORD: mypassword
          POSTGRES_DB: mydb
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U myuser"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Verify PostgreSQL Connection
        run: |
          echo "Waiting for PostgreSQL to be ready..."
          until pg_isready -h localhost -p 5432 -U myuser; do
            sleep 2
          done
          echo "PostgreSQL is ready"

      - name: Grant execute permission to Gradle wrapper
        run: chmod +x ./gradlew

      - name: Build application
        env:
          QUARKUS_PROFILE: dev  # Ensures Quarkus loads the dev profile
          QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://localhost:5432/mydb
          QUARKUS_DATASOURCE_USERNAME: myuser
          QUARKUS_DATASOURCE_PASSWORD: mypassword
        run: |
          echo "Active Quarkus Profile: $QUARKUS_PROFILE"
          ./gradlew build

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          file: ./src/main/docker/Dockerfile.jvm
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: artifacts
          path: build/reports/tests/test
          if-no-files-found: error
          retention-days: 90
      
